{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 * @see template_preprocess_field()
 */
#}
{%
  set title_classes = [
    label_display == 'visually_hidden' ? 'visually-hidden',
    label_display == 'inline' ? 'label-inline',
    label_display == 'above' ? 'label-above',
    field_type == 'telephone' ? 'type',
    field_type == 'email' ? 'type',
  ]
%}
{%
  set attribute_classes = [
  'vcard__item',
  field_type == 'telephone' ? 'tel',
  field_type == 'telephone_plus_field' ? 'tel',
  field_type == 'email' ? 'email',
]
%}
{%
  set item_classes = [
  field_type == 'telephone' ? 'value',
  field_type == 'telephone_plus_field' ? 'value',
  field_type == 'email' ? 'value',
  field_type == 'link' ? 'url fn',
]
%}
{%
  set btn_classes = [
  'call-to-action',
]
%}
{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass(attribute_classes) }}>
      {% for item in items %}
        {{ item.content }}
      {% endfor %}
    </div>
  {% else %}
    {% for item in items %}
      {{ item.content }}
    {% endfor %}
  {% endif %}
{% else %}
  {% if label_display == 'inline' %}
    <div{{ attributes.addClass(attribute_classes) }}>
      <span{{ title_attributes.addClass(title_classes) }}>{{ label }}</span>
      {% for item in items %}
        <span{{ item.attributes.addClass(item_classes) }}>{{ item.content }}</span>
      {% endfor %}
    </div>
  {% elseif label_display == 'visually_hidden' and field_type == 'link' %}
    {% for item in items %}
      <div class="launch-service" role="presentation">
        <a{{ item.attributes.addClass(btn_classes) }} href="{{ item.content['#url'] }}">{{ label }}<svg aria-hidden="true" class="ico ico-arrow-right"><use xlink:href="#arrow"></use></svg></a>
      </div>
    {% endfor %}
  {% else %}
    <h2{{ title_attributes }}>{{ label }}</h2>
    {% for item in items %}
      {{ item.content }}
    {% endfor %}
  {% endif %}
{% endif %}
