/*
 * @file
 * Provides the styling for inline videos.
 */
@import '../../init';

@mixin media-video {
  // To make iframed videos fluid width and maintain aspect ratio, we use the "intrinsic aspect ratios for video"
  // technique. See https://css-tricks.com/fluid-width-video/
  // and http://www.alistapart.com/articles/creating-intrinsic-ratios-for-video/.
  width: 100%;
  position: relative;
  padding-bottom: 56.25%; /* 16:9 is the expected ratio. */
  height: 0;
  overflow: hidden;

  iframe,
  video {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    border: 0;
    background-color: transparent;
  }

  video {
    background-color: $grey;
    color: $white;

    &:focus {
      // HTML5 video element can receive focus
      outline: 3px solid $black;
      background-color: $black;
    }
  }
}

// The media-video wrapper wraps all videos embedded with an iframe.
.media-video {
  @include media-video;
}

// Video and caption component.
.video-and-caption {

  $self: &; // https://css-tricks.com/using-sass-control-scope-bem-naming/.

  width: 100%;
  position: relative;

  &__heading {
    padding-left: .8rem;

    @include breakpoint($tab, $no-query: true) {
      padding-left: 1.5rem;
    }
  }

  &__content {

    // By default, video and caption are stacked in single column.
    display: flex;
    flex-flow: column nowrap;

    > * {
      flex: auto 1 1;
    }
  }

  &__caption {

    // Center contents of caption horizontally and vertically using flex.
    display: flex;
    flex-flow: column nowrap;
    justify-content: center;
    align-items: center;
    margin: 1em 0 1.5em;
    padding: 0 2.5em;
    color: lighten($charcoal, 10%);

    // Caption text
    p {
      @include responsive-typo-map($large-text);
      margin-top: 0;

      &:last-child {
        margin-bottom: 0;
      }
    }
  }

  &--above &__caption p,
  &--below &__caption p {
    @include responsive-typo-map($xl-text);
    margin-bottom: 0;
  }

  // --left and --right parent modifiers cause video and caption to be side by side at medium screens and up.
  &--left,
  &--right {

    @include breakpoint($phab) {
      #{$self}__content {
        flex-direction: row;
        justify-content: space-between;

        > * {
          flex: 48.9% 0 0;
          max-width: 460px;
          margin: 0;
        }
      }
    }
  }

  // --no-caption modifier visually hides the caption.
  &--no-caption &__caption {
    @include visually-hidden;
  }

  // In DOM order, the caption should be before the video (if not, modify the relevant twig to make it first).
  // Visually we want to change that order using the order property that works on flex items.
  // Parent modifiers determine when caption or video comes second in the order.
  &--left &__video,
  &--above &__video,
  &--below &__caption,
  &--right &__caption {
    order: 2;
  }

  // This class is added to all blocks in layout builder and adds unwanted padding.
  &.layout-builder-block {
    padding: 0;
  }
}

// IE fixes.
@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
  .video-and-caption__caption {
    // https://nicedoc.io/philipwalton/flexbugs#flexbug-2.
    > * {
      max-width: 100%;
    }
  }
}

