/*
 * @file
 * Sets out the base behaviour of form elements.
 */
@import '../init';

// sass-lint:disable no-vendor-prefixes, no-css-comments

// Form defaults
//
// These are the default base styles applied to HTML form elements.
//
// Component classes can override these styles, but if no class applies a style
// to an HTML form element, these styles will be the ones displayed.
//
// Weight: -3
//
// Style guide: forms.base

//
// The following rules are from normalize.css and help to fix inconsistencies
// across various browsers. You should probably leave these rules as is and jump
// to the "Buttons" rule on line 92 before you start editing this file.
//

button,
input,
optgroup,
select,
textarea {
  // Keep form elements constrained in their containers.
  box-sizing: border-box;
  border: 1px solid;
  border-radius: 0;
  max-width: 100%;
}

[type='text']:focus,
[type='search']:focus {
  outline: 0; // For Safari
}

[type='search'] {
  // Correct the odd appearance in Chrome and Safari.
  -webkit-appearance: none;
  // Correct the outline style in Safari.
  outline-offset: -2px;

  // Remove the inner padding and cancel buttons in Chrome and Safari on OS X.
  &::-webkit-search-cancel-button,
  &::-webkit-search-decoration {
    -webkit-appearance: none;
  }
}

// Correct the text style of placeholders in Chrome, Edge, and Safari.
::-webkit-input-placeholder {
  color: inherit;
  opacity: .54;
}

// Button
//
// In addition to the default styling of `<button>` and
// `<input type="submit|image|reset|button">` elements, the `.btn` class and
// its variants can apply buttons styles to various elements (like an `<a>`
// link).
//
// :hover  - Hover styling.
// :active - Depressed button styling.
//
// Style guide: forms.button

// 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
//    controls in Android 4.
// 2. Correct the inability to style clickable types in iOS and Safari.

// Buttons
//
// Buttons built with the `<button>` element are the most flexible for styling
// purposes. But `<input>` elements with `type` set to `submit`, `image`,
// `reset`, or `button` are also supported.
//
// Below is the default button styling. To see variations on the button styling
// see the [button component](section-forms.html#kssref-forms-button).
//
// :hover        - Hover styling.
// :active:hover - Depressed button styling.
//
// Style guide: forms.base.button
@import '../3_components/form/button/button-defs';

.btn,
button,
  // 1
html [type='button'],
[type='reset'],
[type='submit'] {
  -moz-appearance: button;
  -webkit-appearance: button; // 2
}

.btn,
button,
[type='button'],
[type='reset'],
[type='submit'] {
  @extend %button--disabled;
  box-sizing: border-box;
  // Some styles don't apply to <a> links since they are inline elements by default.
  display: inline-block;
  // Address Firefox 4+ setting `line-height` on `input` using `!important` in
  // the UA stylesheet. And prevent its "line-height: normal" rule below from
  // breaking the "appearance: button" styling on the input elements.
  line-height: inherit;
  text-decoration: none;
  // Improve usability and consistency of cursor style between image-type `input` and others.
  cursor: pointer;
  color: color(black);

  &:hover,
  &:focus,
  &:active {
    // Override any link underlines and color changes.
    text-decoration: none;
  }
}

// The %text-form-element can be used to style `<input>` text types and
// `<textarea>` elements at the same time.

// sass-lint:disable no-empty-rulesets
%text-form-element {
  // Add your styles.
  // Correct the odd appearance in Chrome and Safari.
  -webkit-appearance: none;
}
// sass-lint:enable no-empty-rulesets

// Inputs
//
// The `<input>` element is mostly used for text-based inputs that include the
// HTML5 types: `text`, `search`, `tel`, `url`, `email`, `password`, `date`,
// `time`, `number`, `range`, `color`, and `file`.
//
// Markup: kss-templates/forms-input.twig
//
// Style guide: forms.base.input

[type='text'],
[type='search'],
[type='tel'],
[type='url'],
[type='email'],
[type='password'],
[type='date'],
[type='time'],
[type='number'] {
  @extend %text-form-element !optional;
}

//[type='range'] {
//  // Add your styles.
//}
//
//[type='color'] {
//  // Add your styles.
//}
//
//[type='file'] {
//  // Add your styles.
//}

// Checkboxes
//
// If an `<input>` element has the `type='checkbox'` attribute set, the form
// field is displayed as a checkbox.
//
// It's recommended that you don't attempt to style these elements. Firefox's
// implementation doesn't respect `box-sizing`, `padding`, or `width`.
//
// Markup: kss-templates/forms-input-checkbox.twig
//
// Style guide: forms.base.input-checkbox

// Radio buttons
//
// If an `<input>` element has the `type='radio'` attribute set, the form field
// is displayed as a radio button.
//
// It's recommended that you don't attempt to style these elements. Firefox's
// implementation doesn't respect `box-sizing`, `padding`, or `width`.
//
// Markup: kss-templates/forms-input-radio.twig
//
// Style guide: forms.base.input-radio

// Fieldset
//
// The `<fieldset>` element groups a set of form fields, optionally under a
// common name given by the `<legend>` element.
//
// Markup: kss-templates/forms-fieldset.twig
//
// Style guide: forms.base.fieldset

fieldset {
  // Change the border, margin, and padding in all browsers (opinionated).
  border: 1px solid color(border);
  margin: 0 2px;
}

legend {
  border: 0;
  // Align legend text with a fieldset's text while removing left padding so
  // people aren't caught out if they zero out fieldset padding.
  margin-left: -5px;
}

// Labels
//
// The `<label>` element represents a caption of a form field. The label can be
// associated with a specific form control by using the `for` attribute or by
// putting the form control inside the label element itself.
//
// Markup: kss-templates/forms-label.twig
//
// Style guide: forms.base.label

label {
  // Drupal-style form labels.
  display: inline-block;
  font-weight: bold;
}

// Select list
//
// The `<select>` element represents a form field for selecting amongst a set of
// options.
//
// Known limitation: by default, Chrome and Safari on OS X allow very limited
// styling of `<select>`, unless a `border` property is set.
//
// Markup: kss-templates/forms-select.twig
//
// Style guide: forms.base.select

//select {
//  // Add your styles.
//}

optgroup {
  // Restore the font weight unset by a previous rule.
  font-weight: bold;
}

// Text areas
//
// The `<textarea>` element represents a multi-line plain text form field.
//
// Markup: kss-templates/forms-textarea.twig
//
// Style guide: forms.base.textarea

textarea {
  @extend %text-form-element !optional;
}
